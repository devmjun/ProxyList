name: Proxy Updater 
on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: warning
        type: choice
        options:
          - info
          - warning
          - debug

env:
  SCRIPT_URL: ${{ secrets.SCRIPT_URL }}
  IS_LOCAL_ENV: "false"
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_NAME: ${{ secrets.GIT_NAME }}
  GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
  SUCCESS_THREAD_ID: ${{ secrets.SUCCESS_THREAD_ID }}
  ERRORS_THREAD_ID: ${{ secrets.ERRORS_THREAD_ID }}

jobs:
  update-proxy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch: ['http', 'socks4', 'socks5']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        id: checkout

      - name: Check system architecture
        run: uname -m

      - name: Set environment variable
        run: |
          echo "PROTOCOL=${{ matrix.batch }}" >> $GITHUB_ENV

      - name: Download Shell Script
        run: |
          curl -H "Authorization: token $GIT_TOKEN" \
               -H "Accept: application/vnd.github.v3.raw" \
               -o "updater.sh" \
               -L "$SCRIPT_URL"

      - name: Run Shell Script
        run: |
          chmod +x updater.sh
          ./updater.sh
          PROTOCOL=${{ matrix.batch }} ./updater.sh
          rm -r *.sh 

      - name: Save generated files
        uses: actions/upload-artifact@v4
        with:
          name: proxy-files-${{ matrix.batch }}
          path: "*.txt"

  commit-and-push:
    needs: update-proxy
    runs-on: ubuntu-latest
    if: always() 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Restore all generated files
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: proxy-files-*
          merge-multiple: true
      
      - name: List files in the artifacts directory
        run: |
          ls -al artifacts/

      - name: Move files to repository root
        run: |
          mv -f artifacts/*.txt ./

      - name: Check for changes and commit
        id: auto-commit
        run: |
          git config --global user.name "$GIT_NAME"
          git config --global user.email "$GIT_EMAIL"
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
            echo "changes_committed=false" >> $GITHUB_ENV
          else
            KST_DATE=$(TZ="Asia/Seoul" date +"%Y-%m-%d %H:%M:%S KST")
            git commit -m "$KST_DATE"
            echo "Changes committed with timestamp: $KST_DATE"
            echo "changes_committed=true" >> $GITHUB_ENV
          fi

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: $GIT_TOKEN
          branch: main


  send-telegram-message:
    needs: commit-and-push
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send success message to Telegram
        if: needs.commit-and-push.result == 'success'
        run: |
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
               -d chat_id="$TELEGRAM_CHAT_ID" \
               -d message_thread_id=$SUCCESS_THREAD_ID \
               -d parse_mode="HTML" \
               -d text="$(echo -e '✅ Proxy Updater Success!')"

      - name: Send failure message to Telegram
        if: needs.update-proxy.result == 'failure' || needs.commit-and-push.result == 'failure'
        run: |
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
               -d chat_id="$TELEGRAM_CHAT_ID" \
               -d parse_mode="HTML" \
               -d message_thread_id="$ERRORS_THREAD_ID" \
               -d text="$(echo -e '❌ Proxy Updater Failure!\n\nCheck Logs..')"
